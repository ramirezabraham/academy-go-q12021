// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/csv/csv.go

// Package mock is a generated GoMock package.
package mock

import (
	model "main/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNewCsvService is a mock of NewCsvService interface.
type MockNewCsvService struct {
	ctrl     *gomock.Controller
	recorder *MockNewCsvServiceMockRecorder
}

// MockNewCsvServiceMockRecorder is the mock recorder for MockNewCsvService.
type MockNewCsvServiceMockRecorder struct {
	mock *MockNewCsvService
}

// NewMockNewCsvService creates a new mock instance.
func NewMockNewCsvService(ctrl *gomock.Controller) *MockNewCsvService {
	mock := &MockNewCsvService{ctrl: ctrl}
	mock.recorder = &MockNewCsvServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNewCsvService) EXPECT() *MockNewCsvServiceMockRecorder {
	return m.recorder
}

// GetItemFromCSV mocks base method.
func (m *MockNewCsvService) GetItemFromCSV(itemID string) (model.Item, *model.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItemFromCSV", itemID)
	ret0, _ := ret[0].(model.Item)
	ret1, _ := ret[1].(*model.Error)
	return ret0, ret1
}

// GetItemFromCSV indicates an expected call of GetItemFromCSV.
func (mr *MockNewCsvServiceMockRecorder) GetItemFromCSV(itemID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItemFromCSV", reflect.TypeOf((*MockNewCsvService)(nil).GetItemFromCSV), itemID)
}

// GetItemsFromCSV mocks base method.
func (m *MockNewCsvService) GetItemsFromCSV() ([]model.Item, *model.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItemsFromCSV")
	ret0, _ := ret[0].([]model.Item)
	ret1, _ := ret[1].(*model.Error)
	return ret0, ret1
}

// GetItemsFromCSV indicates an expected call of GetItemsFromCSV.
func (mr *MockNewCsvServiceMockRecorder) GetItemsFromCSV() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItemsFromCSV", reflect.TypeOf((*MockNewCsvService)(nil).GetItemsFromCSV))
}

// SaveItems mocks base method.
func (m *MockNewCsvService) SaveItems(newItems *[]model.ApiItem) *model.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveItems", newItems)
	ret0, _ := ret[0].(*model.Error)
	return ret0
}

// SaveItems indicates an expected call of SaveItems.
func (mr *MockNewCsvServiceMockRecorder) SaveItems(newItems interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveItems", reflect.TypeOf((*MockNewCsvService)(nil).SaveItems), newItems)
}
