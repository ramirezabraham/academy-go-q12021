// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/http/http.go

// Package mock is a generated GoMock package.
package mock

import (
	model "main/model"
	url "net/url"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNewHttpService is a mock of NewHttpService interface.
type MockNewHttpService struct {
	ctrl     *gomock.Controller
	recorder *MockNewHttpServiceMockRecorder
}

// MockNewHttpServiceMockRecorder is the mock recorder for MockNewHttpService.
type MockNewHttpServiceMockRecorder struct {
	mock *MockNewHttpService
}

// NewMockNewHttpService creates a new mock instance.
func NewMockNewHttpService(ctrl *gomock.Controller) *MockNewHttpService {
	mock := &MockNewHttpService{ctrl: ctrl}
	mock.recorder = &MockNewHttpServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNewHttpService) EXPECT() *MockNewHttpServiceMockRecorder {
	return m.recorder
}

// CreateUrlToken mocks base method.
func (m *MockNewHttpService) CreateUrlToken() (model.Token, *model.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUrlToken")
	ret0, _ := ret[0].(model.Token)
	ret1, _ := ret[1].(*model.Error)
	return ret0, ret1
}

// CreateUrlToken indicates an expected call of CreateUrlToken.
func (mr *MockNewHttpServiceMockRecorder) CreateUrlToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUrlToken", reflect.TypeOf((*MockNewHttpService)(nil).CreateUrlToken))
}

// GetConfig mocks base method.
func (m *MockNewHttpService) GetConfig(key string) (string, *model.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfig", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*model.Error)
	return ret0, ret1
}

// GetConfig indicates an expected call of GetConfig.
func (mr *MockNewHttpServiceMockRecorder) GetConfig(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockNewHttpService)(nil).GetConfig), key)
}

// GetItemAPI mocks base method.
func (m *MockNewHttpService) GetItemAPI(token string, urlParams url.Values) ([]model.ApiItem, *model.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItemAPI", token, urlParams)
	ret0, _ := ret[0].([]model.ApiItem)
	ret1, _ := ret[1].(*model.Error)
	return ret0, ret1
}

// GetItemAPI indicates an expected call of GetItemAPI.
func (mr *MockNewHttpServiceMockRecorder) GetItemAPI(token, urlParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItemAPI", reflect.TypeOf((*MockNewHttpService)(nil).GetItemAPI), token, urlParams)
}
